name: CI - analyze

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  analyze:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ matrix.node-version }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile || pnpm install

      - name: Audit dependencies (fail on high)
        run: |
          set -o pipefail
          pnpm audit --json > audit.json || true
          node -e "const a=require('./audit.json'); if (!a) process.exit(0); const high = a.metadata?.vulnerabilities?.high || 0; if (high>0) { console.error('High severity vulnerabilities found'); process.exit(2); } console.log('Audit OK');"

      - name: Lint
        run: pnpm run lint

      - name: Typecheck
        run: pnpm exec tsc --noEmit

      - name: Build (Next.js)
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: pnpm exec next build

      - name: Output basic project summary
        run: |
          echo "Node:" $(node -v)
          echo "Installed deps:"
          pnpm list --depth 0